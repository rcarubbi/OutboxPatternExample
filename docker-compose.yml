services:
  api:
    image: ${DOCKER_REGISTRY-}api
    build:
      context: .
      dockerfile: src/Api/Dockerfile
    ports:
      - "80:8080" 
      - "443:8081"
    depends_on:
      sqlserver:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    environment:
      - ConnectionStrings__Database=Server=sqlserver;Database=OutboxPatternExample;User Id=sa;Password=MyP@ssw0rd123!;TrustServerCertificate=True;
      - RabbitMq__Host=rabbitmq
      - RabbitMq__Username=guest
      - RabbitMq__Password=guest
      - RabbitMq__VirtualHost=/
    networks:
      - mynetwork

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "MyP@ssw0rd123!"
      ACCEPT_EULA: "Y"
    volumes:
      - sqlserver-data:/var/opt/mssql  
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"  
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      retries: 5

networks:
  mynetwork:
    driver: bridge

volumes:
  sqlserver-data:  
  rabbitmq_data: